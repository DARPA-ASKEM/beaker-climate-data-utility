import requests
import os
from datetime import datetime

# Set the current datetime
current_datetime = datetime.now().isoformat()

# Define the payload
payload = {
    "userId": "service-user",
    "name": "{{identifier}} dataset transformed",
    "description": "This dataset was generated by beaker after a transformation operation occurred on an original dataset {{identifier}}.",
    "dataSourceDate": "",
    "fileNames": ["{{identifier}}"],
    "datasetUrl": "",
    "columns": [
        {
            "name": "string",
            "dataType": "UNKNOWN",
            "formatStr": "string",
            "annotations": ["string"],
            "metadata": {},
            "grounding": {"identifiers": {}, "context": {}},
            "description": "string",
        }
    ],
    "metadata": {},
    "source": "string",
    "grounding": {"identifiers": {}, "context": {}},
}

payload["dataSourceDate"] = current_datetime

# Get the HMI_SERVER environment variable
hmi_server = os.getenv("HMI_SERVER")
auth_token = os.getenv("BASIC_AUTH_TOKEN")

# Set the username and password
username = os.getenv("HMI_SERVER_USER")
password = os.getenv("HMI_SERVER_PASSWORD")

# Set the headers
headers = {
    "accept": "application/json",
    "Content-Type": "application/json",
}

# Send the POST request with basic authentication
create_url = f"{hmi_server}/datasets"
response = requests.post(create_url, json=payload, headers=headers, auth=(username, password))

# Check the response status code
if response.status_code < 300:
    message = response.json()
else:
    message = f'Dataset creation failed with status code {response.status_code}.'
    if response.text:
        message += f' Response message: {response.text}'

message
